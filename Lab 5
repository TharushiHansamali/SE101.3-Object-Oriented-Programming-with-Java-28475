Q1)

public interface MyFirstInterface {
    int x = 10; // Interface variable (implicitly public, static, and final)

    void display(); // Abstract method (implicitly public and abstract)
}

public class InterfaceImplemented implements MyFirstInterface {
    // Implementing the abstract method from the interface
    @Override
    public void display() {
        // Try to change the value of x inside this method
        // Uncomment the line below to see the error
        // x = 20; // Error: The final field MyFirstInterface.x cannot be assigned
        System.out.println("Value of x: " + x);
    }
}
Q3)
final class Student {
    final int marks = 100;
    final void display();
}

abstract class Student {
    final int marks = 100;
    abstract void display();
}

Q2)
package com.mycompany.interfaceobj;
public class InterfaceObj 
{
    public static void main(String[] args)
    {
        Politician p=new Politician();
        Priest p1=new Priest();
        Lecturer l1=new Lecturer();
        
        p.speak();
        p1.speak();
        l1.speak();
    }
}

package com.mycompany.interfaceobj;
public class Lecturer implements Speaker
{
    public void speak()
    {
        System.out.println("As a Lecturer");
    }
    
}

package com.mycompany.interfaceobj;
public class Politician implements Speaker
{
    public void speak()
    {
        System.out.println("As a Politician");
    }
    
}

package com.mycompany.interfaceobj;
public class Priest implements Speaker
{
    public void speak()
    {
        System.out.println("As a Priest");
    }
}

package com.mycompany.interfaceobj;
public interface Speaker 
{
    public void speak();
    
}



